<project default="run-experiments" >

  
	<!-- with the run-experiment target, this class is then executed with both the old and the new version of the 3rd party lib -->
	<property name="package" value="testing_lib.accessModifierClazzAccessDecrease" />
	<property name="error1" value="clear" />
  
	<property name="main" value="${package}.Main" />
	<property name="program" value="main" />
	<property name="lib.old" value="testing-lib-v1-0.0.1" />
	<property name="lib.new" value="testing-lib-v2-0.0.2" />
	
	<!-- references to other Eclipse projects that must be checked out into a parallel folder -->
	<property name="program.project" value="../../testing-lib" />
	<property name="lib.old.project" value="../testing-lib-v1" />
	<property name="lib.new.project" value="../testing-lib-v2" />
	
	<!-- source used by Eclipse ! -->
	<property name="program.src" value="${program.project}/src/main/java" />
	<property name="lib.new.src" value="${lib.new.project}/src/main/java" />
	<property name="lib.old.src" value="${lib.old.project}/src/main/java" />
	
	<!-- tmp folders for compilation -->
	<property name="new.bin" value="bin-version2" />
	<property name="old.bin" value="bin-version1" />

	<property name="client.bin" value="bin-client" />
	<property name="lib.old.bin" value="bin-lib1" />
	<property name="lib.new.bin" value="bin-lib2" />
	
	<!-- jar file names -->
	<property name="program.jar" value="${program.project}/target/${program}.jar" />
	<property name="lib.new.jar" value="${lib.new.project}/target/${lib.new}.jar" />
	<property name="lib.old.jar" value="${lib.old.project}/target/${lib.old}.jar" />
	
	<!-- output file names -->
	<property name="binary.file" value="binary.txt" />
	<property name="source.file" value="source.txt" />
	
	<target name="packageName" >
	  <antcall target="prepare">  </antcall>  
	  <antcall target="run-experiments">   </antcall>
	   
	  <!--<antcall target="prepare">  </antcall>
	  <antcall target="jar">  </antcall>
	  <antcall target="instructions">  </antcall>
	  <antcall target="run-experiments">   </antcall>
	  <antcall target="run-with-lib-version1">  </antcall>
	  <antcall target="compile-with-lib-version1">    </antcall>
	  <antcall target="run-with-lib-version2">    </antcall>  
	  <antcall target="compile-with-lib-version2">  </antcall> -->
  	</target>
	
	<target name="prepare" description="Prepare build">
		<delete file="${program.jar}" />
		<delete file="${lib.new.jar}" />
		<delete file="${lib.old.jar}" />
		<delete dir="${new.bin}" />
		<delete dir="${old.bin}" />
		<delete file="${binary.file}" />
		<delete file="${source.file}" />
		<mkdir dir="${new.bin}" />
		<mkdir dir="${old.bin}" />
	</target>
	
	<!-- Compile sources to classes -->
	<target name="compile" description="Compile source files to classes">
		<mkdir dir="${client.bin}" />
		<mkdir dir="${lib.old.bin}" />
		<mkdir dir="${lib.new.bin}" />
		
		<javac srcdir="${lib.old.src}"
		        destdir="${lib.old.bin}"
		        debug="on"
		        source="1.8"
	   		 	includeAntRuntime="false"
		/> 	
			
		<javac srcdir="${lib.new.src}"
		        destdir="${lib.new.bin}"
		        debug="on"
		        source="1.8"
	   		 	includeAntRuntime="false"
		/> 	
		
		<jar jarfile="${lib.old.jar}" basedir="${lib.old.bin}" />
		
		<javac srcdir="${program.src}"
		        destdir="${client.bin}"
		        classpath="${lib.old.jar}"
		        debug="on"
		        source="1.8"
	   		 	includeAntRuntime="false"
		/>
		
		<delete file="${lib.old.jar}" />
		
	</target>

	<!-- Clean script direcrtion -->
	<target name="clean" description="Clean script direcrtion">
		<delete file="${program.jar}" />
		<delete file="${lib.new.jar}" />
		<delete file="${lib.old.jar}" />
		<delete dir="${new.bin}" />
		<delete dir="${old.bin}" />
		<delete file="${binary.file}" />
		<delete file="${source.file}" />
		<delete dir="${client.bin}" />
		<delete dir="${lib.old.bin}" />
		<delete dir="${lib.new.bin}" />
	</target>
	
	<!-- build the jars -->
	<target name="jar" depends="prepare,compile" description="Create the jar files">
		<jar jarfile="${lib.old.jar}" basedir="${lib.old.bin}" />
		<jar jarfile="${lib.new.jar}" basedir="${lib.new.bin}" />
		<jar jarfile="${program.jar}" basedir="${client.bin}" />
	</target>
	
	<!-- print instructions -->
	<target name="instructions" depends="jar" description="Print instructions">
		<echo>Run experiments as follows:</echo>
		<echo>each example corresponds to one package in ${program.project}/src - for instance pck":</echo>
		<echo>with original library: java -cp ${program.jar}:${lib.old.jar} pck.Main</echo>
		<echo>with updated library: java -cp ${program.jar}:${lib.new.jar} pck.Main</echo>
	</target>
	
	<!-- run experiment with class defined in main -->
	<target name="run-experiments" depends="jar,run-with-lib-version1,run-with-lib-version2,compile-with-lib-version1,compile-with-lib-version2" description="run experiments">
		<echo>Done - main class used was ${package}.Main</echo>
	</target>
	
	<!-- run experiment with old lib version -->
	<target name="run-with-lib-version1" description="run experiment with old lib version">
		<echo>===Executing ${main} with original library (${lib.old.jar})===</echo>
		<java classname="${main}">
        	<classpath>
           		<pathelement location="${program.jar}"/>
           		<pathelement location="${lib.old.jar}"/>
        	</classpath>
       </java>
	</target>
		
	<target name="compile-with-lib-version1" description="compile against old lib version">
	   <echo>***Compiling program with original library (${lib.old.jar})***</echo>
	   <javac srcdir="${program.src}"
		        destdir="${old.bin}"
		        classpath="${lib.old.jar}"
	   		 	includes="${package}/**"
		        debug="on"
		        source="1.8"
	   		 	includeAntRuntime="false"
		/> 	
	</target>
	
	<!-- run experiment with new lib version -->
	<target name="run-with-lib-version2" description="run experiment with new lib version">
       <echo>===Executing ${main} with updated library (${lib.new.jar})===</echo>
       <record name="${binary.file}" action="start"/>
	   <java classname="${main}">
        	<classpath>
           		<pathelement location="${program.jar}"/>
           		<pathelement location="${lib.new.jar}"/>
        	</classpath>  
       </java>
       <record name="${binary.file}" action="stop"/>
       
	</target>
	
	<target name="compile-with-lib-version2" description="compile against new lib version">
	   <echo>***Compiling program with updated library (${lib.new.jar})***</echo>
	   <record name="${source.file}" action="start"/>
	   <javac srcdir="${program.src}"
		        destdir="${new.bin}"
		        classpath="${lib.new.jar}"
	   			includes="${package}/**"
		        debug="on"
		        source="1.8"
	   	        includeAntRuntime="false"
	   			failonerror="false"
		/> 	
	   <record name="${source.file}" action="stop"/>
	</target>

</project>
